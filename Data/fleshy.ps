%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Sat Nov 18 13:42:10 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 48x65mm 136 184 0 () ()
%%BoundingBox: 1 3 134 182
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 48x65mm
%%PageBoundingBox: 1 3 134 182
137 185 cairo_set_page_size
%%EndPageSetup
q 1 3 133 179 rectclip q
0 g
34.367 3.447 m 19.891 4.662 8.594 13.627 3.965 27.572 c 0.828 37.01 1.379
 46.588 5.539 54.979 c 7.652 59.248 11.055 62.881 14.559 64.615 c 17.195
 65.916 18.742 66.314 21.883 66.498 c 26.449 66.76 30.648 65.482 33.332 
63.021 c 34.695 61.771 34.551 61.658 35.742 64.896 c 38.594 72.623 41.051
 87.115 42.262 103.295 c 44.09 127.791 43.457 147.088 40.41 159.564 c 39.289
 164.154 38.379 166.283 37.004 167.521 c 34.32 169.939 32.457 171.975 32.016
 172.971 c 31.359 174.451 30.984 176.896 31.359 177.264 c 31.988 177.885
 38.027 181.084 38.211 180.893 c 38.32 180.779 38.738 179.854 39.141 178.834
 c 39.875 176.979 l 39.035 176.053 l 37.977 174.877 37.914 173.771 38.844
 172.666 c 40.156 171.107 43.523 163.959 44.348 160.986 c 45.168 158.025
 46.344 152.424 46.352 151.428 c 46.355 151.064 47.215 149.822 48.66 148.088
 c 58.551 136.244 70.289 120.451 76.754 110.295 c 80.281 104.752 84.059 
97.916 88.676 88.709 c 91.129 83.814 93.168 79.779 93.199 79.744 c 93.23
 79.709 93.805 80.361 94.469 81.193 c 97.605 85.1 102.141 87.486 106.988
 87.771 c 116.199 88.314 125.113 82.443 130.031 72.592 c 132.242 68.162 
133.191 64.432 133.664 58.326 c 134.43 48.404 132.102 38.393 127.324 31.041
 c 125.699 28.541 121.68 24.4 119.367 22.846 c 112.035 17.924 102.102 15.912
 92.973 17.502 c 89.57 18.096 86.66 19.064 83.324 20.717 c 78.348 23.178
 73.891 26.76 70.566 30.982 c 69.715 32.064 68.992 32.92 68.957 32.885 c
 68.922 32.85 68.66 31.689 68.379 30.303 c 66.09 19.064 58.812 9.771 49.164
 5.752 c 44.773 3.924 39.133 3.045 34.367 3.447 c h
63.617 67.889 m 64.809 70.959 66.262 73.182 68.586 75.486 c 71.027 77.908
 73.324 79.24 76.906 80.326 c 79.875 81.225 84.41 81.291 86.898 80.475 c
 87.777 80.186 88.516 79.975 88.539 80.002 c 88.656 80.135 69.516 114.584
 67.953 117.057 c 66 120.146 60.617 127.604 57 132.225 c 53.238 137.037 
47.559 143.971 47.387 143.971 c 47.297 143.971 47.32 142.162 47.434 139.951
 c 47.949 130.127 46.348 101.502 44.496 87.471 c 43.371 78.959 41.652 70.49
 40.184 66.229 c 39.906 65.424 39.719 64.729 39.762 64.686 c 39.809 64.643
 40.613 64.982 41.555 65.447 c 44.223 66.76 46.062 67.162 49.449 67.182 
c 51.723 67.193 52.734 67.088 53.777 66.736 c 56.02 65.975 58.195 64.635
 60.047 62.865 c 61.801 61.197 l 62.336 63.58 l 62.629 64.893 63.207 66.83
 63.617 67.889 c h
63.617 67.889 m f
Q Q
showpage
%%Trailer
%%EOF
